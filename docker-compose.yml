version: "3"

services:
  app:
    build: .
    command: npm start
    env_file:
      - .env
    restart: always
    ports:
      - "9229:9229"
    depends_on:
      - mongodb
    volumes:
      - .:/app
    networks:
      - traefik-net
      - app-net
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.${PROJECT_NAME}.entrypoints=web"
      - "traefik.http.routers.${PROJECT_NAME}.rule=Host(`${PROJECT_NAME}.bot.inbeet.tech`)"
      - "traefik.http.routers.${PROJECT_NAME}.middlewares=https-redirect"
      - "traefik.http.routers.${PROJECT_NAME}-secure.entrypoints=websecure"
      - "traefik.http.routers.${PROJECT_NAME}-secure.rule=Host(`${PROJECT_NAME}.bot.inbeet.tech`)"
      - "traefik.http.routers.${PROJECT_NAME}-secure.tls=true"
      - "traefik.http.routers.${PROJECT_NAME}-secure.tls.certresolver=letsencrypt"
      - "traefik.http.routers.${PROJECT_NAME}-secure.service=${PROJECT_NAME}"
      - "traefik.http.services.${PROJECT_NAME}.loadbalancer.server.port=3000"
      - "traefik.docker.network=traefik-net"

  rabbitmq:
    image: rabbitmq:3-management
    env_file:
      - .env
    restart: unless-stopped
    volumes:
      - rabbitmqdata:/var/lib/rabbitmq
    networks:
      - app-net
      - traefik-net
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.${PROJECT_RABBITMQ}.entrypoints=web"
      - "traefik.http.routers.${PROJECT_RABBITMQ}.rule=Host(`${PROJECT_RABBITMQ}.bot.inbeet.tech`)"
      - "traefik.http.routers.${PROJECT_RABBITMQ}.middlewares=https-redirect"
      - "traefik.http.routers.${PROJECT_RABBITMQ}-secure.entrypoints=websecure"
      - "traefik.http.routers.${PROJECT_RABBITMQ}-secure.rule=Host(`${PROJECT_RABBITMQ}.bot.inbeet.tech`)"
      - "traefik.http.routers.${PROJECT_RABBITMQ}-secure.tls=true"
      - "traefik.http.routers.${PROJECT_RABBITMQ}-secure.tls.certresolver=letsencrypt"
      - "traefik.http.routers.${PROJECT_RABBITMQ}-secure.service=${PROJECT_RABBITMQ}"
      - "traefik.http.services.${PROJECT_RABBITMQ}.loadbalancer.server.port=15672"
      - "traefik.docker.network=traefik-net"
    depends_on:
      - mongodb

  redis:
    image: redis
    env_file:
      - .env
    restart: unless-stopped
    networks:
      - app-net
    depends_on:
      - mongodb

  mongodb:
    image: mongo
    env_file:
      - .env
    restart: unless-stopped
    volumes:
      - ./db.data:/data/db
    networks:
      - app-net
      - mongo-net

  mongo-express:
    image: mongo-express
    restart: unless-stopped
    environment:
      ME_CONFIG_MONGODB_SERVER: mongodb
      ME_CONFIG_MONGODB_PORT: "27017"
      # ME_CONFIG_MONGODB_ADMINUSERNAME: ${MONGO_INITDB_ROOT_USERNAME}
      # ME_CONFIG_MONGODB_ADMINPASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
      # ports:
      #   - "8081:8081"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.${PROJECT_DB}.entrypoints=web"
      - "traefik.http.routers.${PROJECT_DB}.rule=Host(`${PROJECT_DB}.bot.inbeet.tech`)"
      - "traefik.http.routers.${PROJECT_DB}.middlewares=https-redirect"
      - "traefik.http.routers.${PROJECT_DB}-secure.entrypoints=websecure"
      - "traefik.http.routers.${PROJECT_DB}-secure.rule=Host(`${PROJECT_DB}.bot.inbeet.tech`)"
      - "traefik.http.routers.${PROJECT_DB}-secure.tls=true"
      - "traefik.http.routers.${PROJECT_DB}-secure.tls.certresolver=letsencrypt"
      - "traefik.http.routers.${PROJECT_DB}-secure.service=${PROJECT_DB}"
      - "traefik.http.routers.${PROJECT_DB}-secure.middlewares=${PROJECT_DB}-auth"
      - "traefik.http.middlewares.${PROJECT_DB}-auth.basicauth.users=mjs:$$2y$$05$$MIvU1G1bSBgQUrWBugCLVOQUxMGJxmq4pGX/6I54P2QN1iyQaIJsK"
      - "traefik.http.services.${PROJECT_DB}.loadbalancer.server.port=8081"
      - "traefik.docker.network=traefik-net"
    networks:
      - traefik-net
      - mongo-net
    depends_on:
      - mongodb

volumes:
  dbdata:
  rabbitmqdata:


networks:
  app-net:
  mongo-net:
  traefik-net:
    external: true
